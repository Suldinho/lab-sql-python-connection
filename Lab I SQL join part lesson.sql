USE sakila;
--  Write SQL queries to perform the following tasks using the Sakila database:

-- 1 List the number of films per category.
SELECT
    fc.category_id,
    c.name AS category_name,
    COUNT(f.film_id) AS film_count
FROM
    film_category AS fc
JOIN
    film AS f ON fc.film_id = f.film_id
JOIN
    category AS c ON fc.category_id = c.category_id
GROUP BY
    fc.category_id, c.name
ORDER BY
    film_count DESC, c.name;

-- 2 Retrieve the store ID, city, and country for each store.
SELECT * 
FROM store as st

JOIN 
    address as ad on st.address_id=ad .address_id
JOIN 
    city as c on ad.city_id=c.city_id;
  

-- 3 Calculate the total revenue generated by each store in dollars.
SELECT st.store_id as store, sum(p.amount) as revenue from payment as p
join customer as c on p.customer_id=c.customer_id
join store as st on c.store_id=st.store_id
group by store;



-- 4 Determine the average running time of films for each category.
SELECT
    c.name AS category_name,
    AVG(f.length) AS average_running_time
FROM
    category AS c
JOIN
    film_category AS fc ON c.category_id = fc.category_id
JOIN
    film AS f ON fc.film_id = f.film_id
GROUP BY
    c.name
ORDER BY
    average_running_time DESC, c.name;



-- Bonus:

-- 5 Identify the film categories with the longest average running time.
SELECT
    c.name AS category_name,
    AVG(f.length) AS average_running_time
FROM
    category AS c
JOIN
    film_category AS fc ON c.category_id = fc.category_id
JOIN
    film AS f ON fc.film_id = f.film_id
GROUP BY
    c.name
ORDER BY
    average_running_time DESC;


-- 6 Display the top 10 most frequently rented movies in descending order.
SELECT
    f.title AS film_title,
    COUNT(r.rental_id) AS rental_count
FROM
    film AS f
JOIN
    inventory AS i ON f.film_id = i.film_id
JOIN
    rental AS r ON i.inventory_id = r.inventory_id
GROUP BY
    f.film_id, f.title
ORDER BY
    rental_count DESC
LIMIT 10;


-- 7 Determine if "Academy Dinosaur" can be rented from Store 1.
SELECT
    CASE
        WHEN EXISTS (
            SELECT 1
            FROM inventory AS i
            JOIN film AS f ON i.film_id = f.film_id
            WHERE f.title = 'Academy Dinosaur' AND i.store_id = 1
        ) THEN 'Yes'
        ELSE 'No'
    END AS can_be_rented






